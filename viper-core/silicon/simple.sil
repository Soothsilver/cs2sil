field f: Int

method test1(xs: Seq[Ref]) {
  inhale 10 < |xs|
  inhale forall i: Int :: 0 <= i && i < |xs| ==> acc(xs[i].f)

  inhale forall i: Int :: 0 <= i && i < |xs| ==> xs[i].f != 0
  inhale forall i: Int :: 0 <= i && i < |xs| ==> xs[i].f != 1
  inhale forall i: Int :: 0 <= i && i < |xs| ==> xs[i].f != 2

  assert xs[0].f != 0
  assert xs[1].f != 1
  assert xs[2].f != 2
}

method test2(xs: Seq[Ref]) {
  inhale 10 < |xs|
  inhale forall i: Int :: 0 <= i && i < |xs| ==> acc(xs[i].f)

  inhale xs[0].f == 0

  assert xs[0].f == 0
  assert forall i: Int :: 0 <= i && i <= 0 ==> xs[i].f == 0
}